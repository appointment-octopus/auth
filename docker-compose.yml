version: "3.8"

services:
  nginx:
    build:
      dockerfile: ./Dockerfile.nginx
      context: .
    ports: 
      - 80:80
      - 443:443
    depends_on:
      - auth-api1
      - auth-api2
      - auth-api3
      - redis
      - database

  auth-api1:
    build:
      context: .
      dockerfile: Dockerfile.dev
    depends_on:
      - database
      - redis
    volumes:
      - .:/auth
    ports:
      - 5000:5000
    env_file:
      - .env
    entrypoint: ["/bin/bash", "./entrypoints/build_app.sh"]


  auth-api2:
    build:
      context: .
      dockerfile: Dockerfile.dev
    depends_on:
      - auth-api1
      - database
      - redis
    volumes:
      - .:/auth
    ports:
      - 5001:5000
    env_file:
      - .env
    entrypoint: ["/bin/bash", "./entrypoints/build_app.sh"]


  auth-api3:
    build:
      context: .
      dockerfile: Dockerfile.dev
    depends_on:
      - auth-api2
      - database
      - redis
    volumes:
      - .:/auth
    ports:
      - 5002:5000
    env_file:
      - .env
    entrypoint: ["/bin/bash", "./entrypoints/build_app.sh"]


  redis:
    image: redis
    depends_on:
      - database
    ports:
      - 6379:6379

  database:
    image: postgres
    restart: on-failure
    env_file:
      - .env
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - database-data:/var/lib/postgresql/data

  
 
 
volumes:
  database-data:

